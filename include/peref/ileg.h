/*======================================================================
Имя файла:         	ileg.h
Автор:             	Саидов В.С.
Версия файла:      	01.02
Дата изменения:		26/04/10
Описание:
Обработка датчиков
======================================================================*/

#ifndef ILEG_
#define ILEG_

#include "std.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct {
	Int    Input;			// Входное мгновенное значение в А (Q5)
	Uns    Output;			// Выходное действующее значение в о.е (Q5)
	Uns    Sign;			// Знак входного сигнала
	Int    Polarity;		// Полярность сигнала
	Uns    CurAngle;		// Угол фазы сигнала (такты)
	Uns    Counter;		// Счетчик для более точного расчета интеграла
	LgUns  Sum;          // Интеграл мгновенных значений
} ILEG_TRN;

void ileg_trn_calc(ILEG_TRN *);

typedef struct {
	LgInt  Input;			// Входное мгновенное значение в А (Q21)
	LgInt  Signal;			// Мгновенное значения сигнала в о.е.
	LgInt  Output;			// Выходное действующее значение в о.е
	LgInt *Ramp;			// Сигнал ориентации вектора напряжения
	LgInt  RampPrev;		// Память сигнала ориентации вектора напряжения
	LgInt *Mash1;			// Масштабный коэффициент для перевода в о.е.
	LgInt  Mash2;			// Масштабный коэффициент по времени расчета
	LgInt *Mash3;			// Масштабный коэффициент по текущей частоте
	LgInt  Sum;          // Интеграл мгновенных значений
	LgInt  Sum1;			// Промежуточный интеграл
	Uns    Counter;		// Счетчик для более точного расчета интеграла
} ILEG_FQ;

void ileg_fq_calc(ILEG_FQ *);

typedef struct {
	Int Direction;			// Значение чередования фаз
	Int TmpDir;				// Текущее определенное чередование фаз
	Uns Timeout;			// Тайм-аут определения чередования фаз
	Uns Timer;				// Таймер для избежания резкой смены чередования фаз
	ILEG_TRN *Ur;			// Структура для напряжения в фазе R
	ILEG_TRN *Us;			// Структура для напряжения в фазе S
	ILEG_TRN *Ut;			// Структура для напряжения в фазе T
} PH_ORDER;

void ph_order_trn(PH_ORDER *);

#ifdef __cplusplus
}
#endif // extern "C"

#endif


